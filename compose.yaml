# Define services for the application
services:
  # Backend service (Django REST framework)
  backend:
    tty: true
    container_name: backend
    build: 
      context: ./backend  # Build the backend service using the Dockerfile in the ./backend directory
      args:  # Add build arguments
        - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
        - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
        - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
        - OLLAMA_ENDPOINT=${OLLAMA_ENDPOINT:-http://host.docker.internal:11434}
        - OLLAMA_HOST=${OLLAMA_HOST:-host.docker.internal}
        - OLLAMA_PORT=${OLLAMA_PORT:-11434}
        - OPENAI_API_KEY=${OPENAI_API_KEY}
    environment:
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - OLLAMA_ENDPOINT=${OLLAMA_ENDPOINT}
      - OLLAMA_HOST=${OLLAMA_HOST}
      - OLLAMA_PORT=${OLLAMA_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    restart: always  # Restart the backend service always (even if it exits normally)
    ports:
      - 6969:6969  # Map port 6969 on the host to port 6969 on the container
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # volumes:
      # We want a way to persist the database from the container to the local machine
      # - ./backend/db.sqlite3:/home/backend/db.sqlite3
      # - ./backend/api/:/home/backend/api

  # Frontend service
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      args:
        - VITE_APP_BACKEND_API_URL=${VITE_APP_BACKEND_API_URL:-}
        - VITE_APP_APP_URL=${VITE_APP_APP_URL:-http://localhost:4200}
        - VITE_APP_BACKEND_API_VERSION=${VITE_APP_BACKEND_API_VERSION:-api/v1/}
    environment:
      - VITE_APP_BACKEND_API_URL=${VITE_APP_BACKEND_API_URL:-}
      - VITE_APP_APP_URL=${VITE_APP_APP_URL:-http://localhost:4200}
      - VITE_APP_BACKEND_API_VERSION=${VITE_APP_BACKEND_API_VERSION:-api/v1/}
      - CHOKIDAR_USEPOLLING=true  # Enable polling for file changes in Chokidar
      - WATCHPACK_POLLING=true  # Enable polling for file changes in Watchpack
    ports:
      - "${FRONTEND_PORT:-4200}:4200"
    tty: true  # Allocate a pseudo-TTY for the frontend service
    volumes:
      # Mount specific directories and files to the container
      - ./frontend/src/:/home/frontend/src  # Mount the local ./frontend/src directory to /home/frontend/src in the container
      - ./frontend/vite.config.ts:/home/frontend/vite.config.js  # Mount the local vite.config.ts file to /home/frontend/vite.config.js in the container
      - ./frontend/tsconfig.json:/home/frontend/tsconfig.json  # Mount the local tsconfig.json file to /home/frontend/tsconfig.json in the container
    develop:
      watch:
        - path: frontend/src/  # Watch for changes in the specified directory, excluding node_modules
          target: /home/frontend/src
          action: sync
    command: bun run dev  # Run the "npm run dev" command when starting the frontend service

  # Nginx server service
  server:
    container_name: nginx
    build: ./proxy  # Build the Nginx service using the Dockerfile in the ./nginx directory
    depends_on:
      - frontend  # Ensure that the frontend service is started before the Nginx service
    restart: always  # Restart the Nginx service always (even if it exits normally)
    ports:
      - 5073:5073
